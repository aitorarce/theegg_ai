He implementado 2 soluciones, la optima es algoritmo_lechero_programacion_dinamica.py:
para ejecutarlo puedes o copiar y pegar el código en tu notebook favorito y ejecutar, o desde linea de comandos o terminal.
ejecutando:

    python algoritmo_lechero_programacion_dinamica.py


La otra solucion es recursiva y con un Big o exponencial creo, O(2^n), y fue la primera implementacion que se me ocurrió
a raiz de investigar un poco mas la deseché pero la conservo a modo de referencia de que no se debería hacer si se puede evitar

Para ejecutar el código puedes hacerlo desde la linea de comandos:

        python algoritmo_lechero.py
Tambien puedes copiar y pegar el codigo en un notebook y ejecuta en Jupyter, Colab etc

He decidido no usar librerias externas para obtener todos los subconjuntos de un conjunto e implementarlo mediante una funcion recursiva
para resolver el porblema obtengo todos los subconjuntos posibles de elementos de la clase Vaca y me quedo con aquel que tiene mas litros
por dia por debajo de la tara maxima del camion.

un saludo